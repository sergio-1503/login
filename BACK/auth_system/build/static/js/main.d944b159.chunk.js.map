{"version":3,"sources":["containers/Home.js","actions/types.js","actions/auth.js","containers/Activate.js","containers/Login.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","containers/Signup.js","reducers/auth.js","reducers/index.js","store.js","components/Navbar.js","hocs/Layout.js","App.js","index.js"],"names":["Home","className","class","to","role","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","verify","uid","token","body","JSON","stringify","post","match","useState","verified","setVerified","style","marginTop","onClick","e","params","state","isAuthenticated","auth","login","email","password","formData","setFormData","onChange","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","signup","re_password","accountCreated","setAccountCreated","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","checkAuthenticated","code","props","useEffect","children","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d944b159.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => (\r\n  <div className='Container'>\r\n    <div class='jumbotron mt-5'>\r\n      <h1 class=\"display-4\">Bienvenido a Auth System</h1>\r\n      <p class='lead'>Este es un increíble sistema de autenticación con características de nivel de producción</p>\r\n      <hr class='my-4' />\r\n      <p>Haga clic en el botón Iniciar sesión</p>\r\n      <p class='lead'>\r\n        <Link class='btn btn-primary btn-lg' to='/login' role='button'>Login</Link>\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Home;","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT';","import axios from 'axios';\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL, \r\n  USER_LOADED_SUCCESS, \r\n  USER_LOADED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  ACTIVATION_SUCCESS,\r\n  ACTIVATION_FAIL,\r\n  LOGOUT\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n  if (localStorage.getItem('access')) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    }; \r\n\r\n      const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n      try {\r\n          const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n          if (res.data.code !== 'token_not_valid') {\r\n              dispatch({\r\n                  type: AUTHENTICATED_SUCCESS\r\n              });\r\n          } else {\r\n              dispatch({\r\n                  type: AUTHENTICATED_FAIL\r\n              });\r\n          }\r\n      } catch (err) {\r\n          dispatch({\r\n              type: AUTHENTICATED_FAIL\r\n          });\r\n      }\r\n\r\n  } else {\r\n      dispatch({\r\n          type: AUTHENTICATED_FAIL\r\n      });\r\n  }\r\n};\r\n\r\nexport const load_user = () => async dispatch => {\r\n  if (localStorage.getItem('access')) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n        'Accept': 'application/json'\r\n     }\r\n    }; \r\n\r\n    try {\r\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n  \r\n      dispatch({\r\n        type: USER_LOADED_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n        dispatch({\r\n        type: USER_LOADED_FAIL\r\n        });\r\n      }\r\n  } else {\r\n      dispatch({\r\n        type: USER_LOADED_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try{\r\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(load_user());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    })\r\n  }\r\n};\r\n\r\nexport const signup = (name, email, password, re_password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password, re_password });\r\n\r\n  try {\r\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n    dispatch({\r\n      type: SIGNUP_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: SIGNUP_FAIL\r\n    })\r\n  }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ uid, token });\r\n\r\n  try {\r\n    await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n    dispatch({\r\n      type: ACTIVATION_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ACTIVATION_FAIL\r\n    })\r\n  }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email });\r\n\r\n  try {\r\n    await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n    dispatch({\r\n      type: PASSWORD_RESET_SUCCESS\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PASSWORD_RESET_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n  try {\r\n    await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n    dispatch({\r\n      type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PASSWORD_RESET_CONFIRM_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  dispatch({\r\n    type: LOGOUT\r\n  });\r\n};\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../actions/auth';\r\n\r\nconst Activate = ({ verify, match }) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div \r\n                className='d-flex flex-column justify-content-center align-items-center'\r\n                style={{ marginTop: '200px' }}\r\n            >\r\n                <h1>Verify your Account:</h1>\r\n                <button\r\n                    onClick={verify_account}\r\n                    style={{ marginTop: '50px' }}\r\n                    type='button'\r\n                    className='btn btn-primary'\r\n                >\r\n                    Verify\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport axios from 'axios';\r\n\r\nconst Login = ({login, isAuthenticated}) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '' \r\n  });\r\n\r\n  const {email,password} = formData;\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  // ¿Está autenticado el usuario?\r\n  // Redirigirlos a la página de inicio\r\n  if(isAuthenticated){\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='container mt-5'>\r\n      <h1>Sign In</h1>\r\n      <p>Sign into your Account</p>\r\n      <form onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className='form-control'\r\n            type='email'\r\n            placeholder='Email'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            required\r\n          />\r\n        </div>\r\n        <button \r\n          className='btn btn-primary' type='submit'>Login\r\n        </button>\r\n      </form>\r\n      <p className='mt-3'>\r\n        ¿No tienes una cuenta? <Link to='/signup'>Sign Up</Link>\r\n      </p>\r\n      <p className='mt-3'>\r\n        ¿Olvidaste tu contraseña? <Link to='/reset-password'>Reset Password</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n   isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../actions/auth';\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: ''\r\n  });\r\n\r\n  const { email } = formData;\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    reset_password(email);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  if (requestSent) {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='container mt-5'>\r\n      <h1>Recuperación de contraseña:</h1>\r\n      <form onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            className='form-control'\r\n            type='email'\r\n            placeholder='Email'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <button className='btn btn-primary' type='submit'>Restablecer la contraseña</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../actions/auth';\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    new_password: '',\r\n    re_new_password: ''\r\n  });\r\n\r\n  const { new_password, re_new_password } = formData;\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n     e.preventDefault();\r\n\r\n    const uid = match.params.uid;\r\n    const token = match.params.token;\r\n\r\n    reset_password_confirm(uid, token, new_password, re_new_password);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  if (requestSent) {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='container mt-5'>\r\n      <form onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            placeholder='New Password'\r\n            name='new_password'\r\n            value={new_password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            placeholder='Confirm New Password'\r\n            name='re_new_password'\r\n            value={re_new_password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            required\r\n          />\r\n        </div>\r\n        <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../actions/auth';\r\nimport axios from 'axios';\r\n\r\nconst Signup = ({signup, isAuthenticated}) => {\r\n  const [accountCreated, setAccountCreated] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    re_password: ''\r\n  });\r\n\r\n  const {name, email,password, re_password} = formData;\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if(password === re_password){\r\n      signup(name, email, password, re_password);\r\n      setAccountCreated(true);\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/' />\r\n  }\r\n  if (accountCreated) {\r\n      return <Redirect to='/login' />\r\n  }\r\n\r\n  return (\r\n    <div className='container mt-5'>\r\n      <h1>Sign Up</h1>\r\n      <p>Create your Account</p>\r\n      <form onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            placeholder='Name*'\r\n            name='name'\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className='form-control'\r\n            type='email'\r\n            placeholder='Email'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            placeholder='Confirm Password*'\r\n            name='re_password'\r\n            value={re_password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            required\r\n          />\r\n        </div>\r\n        <button \r\n          className='btn btn-primary' type='submit'>Register\r\n        </button>\r\n      </form>\r\n      <p className='mt-3'>\r\n        ¿Ya tienes una cuenta? <Link to='/login'>Sign In</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n   isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL, \r\n  USER_LOADED_SUCCESS, \r\n  USER_LOADED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  ACTIVATION_SUCCESS,\r\n  ACTIVATION_FAIL,\r\n  LOGOUT \r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  access: localStorage.getItem('access'),\r\n  refresh: localStorage.getItem('refresh'),\r\n  isAuthenticated: null,\r\n  user: null\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function(state = initialState, action){\r\n  const {type, payload} = action;\r\n\r\n  switch(type){\r\n    case AUTHENTICATED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true\r\n      }\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('access', payload.access);\r\n      localStorage.setItem('refresh', payload.refresh);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        access: payload.access,\r\n        refresh: payload.refresh\r\n      }\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false\r\n      }\r\n    case USER_LOADED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload\r\n      }\r\n    case AUTHENTICATED_FAIL:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false\r\n      }\r\n    case USER_LOADED_FAIL:\r\n      return{\r\n        ...state,\r\n        user: null\r\n      }  \r\n    case LOGIN_FAIL:\r\n    case SIGNUP_FAIL:\r\n    case LOGOUT:  \r\n      localStorage.removeItem('access');\r\n      localStorage.removeItem('refresh');\r\n      return{\r\n        ...state,\r\n        access: null,\r\n        refresh: null,\r\n        isAuthenticated: false,\r\n        user: null\r\n      }\r\n    case PASSWORD_RESET_FAIL:\r\n    case PASSWORD_RESET_SUCCESS:\r\n    case PASSWORD_RESET_CONFIRM_FAIL:\r\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n    case ACTIVATION_SUCCESS:\r\n    case ACTIVATION_FAIL:\r\n      return{\r\n        ...state\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};","import {combineReducers} from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n  auth\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/auth';\r\nimport { Fragment } from 'react';\r\n\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n\r\n  const guestLinks = () => (\r\n    <Fragment>\r\n      <li className='nav-item'>\r\n        <Link className='nav-link' to='/login'>Login </Link>\r\n      </li>\r\n      <li className='nav-item'>\r\n        <Link className='nav-link' to='/signup'>Sing Up </Link>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n\r\n  const authLinks = () => (\r\n    <li className='nav-item'>\r\n      <a className='nav-link' href='#!' onClick={logout}>Logout</a>\r\n    </li>\r\n  );\r\n\r\n  return(\r\n    <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n      <Link className='navbar-brand' to='/'>Auth System</Link>\r\n      <button \r\n        className='navbar-toggler' \r\n        type='button' \r\n        data-toggle='collapse' \r\n        data-target='#navbarNav' \r\n        aria-controls='navbarNav' \r\n        aria-expanded='false' \r\n        aria-label='Toggle navigation'\r\n      >\r\n        <span className='navbar-toggler-icon'></span>\r\n      </button>\r\n      <div className='collapse navbar-collapse' id='navbarNav'>\r\n        <ul className='navbar-nav'>\r\n          <li className='nav-item active'>\r\n            <Link className='nav-link' to='/'>Home <span className='sr-only'>(current)</span></Link>\r\n          </li>\r\n          {isAuthenticated ? authLinks() : guestLinks()}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);","//componentes de orden superior\r\nimport React, { useEffect } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../actions/auth';\r\n\r\nconst Layout = (props) => {\r\n  useEffect(() => {\r\n    props.checkAuthenticated();\r\n    props.load_user();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, {checkAuthenticated, load_user})(Layout);","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nimport Home from './containers/Home';\r\nimport Activate from './containers/Activate';\r\nimport Login from './containers/Login';\r\nimport ResetPassword from './containers/ResetPassword';\r\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\r\nimport Signup from './containers/Signup';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nimport Layout from './hocs/Layout';\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route exact path='/login' component={Login} />\r\n          <Route exact path='/signup' component={Signup} />\r\n          <Route exact path='/reset-password' component={ResetPassword} />\r\n          <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\r\n          <Route exact path='/activate/:uid/:token' component={Activate} />       \r\n        </Switch>\r\n      </Layout>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}